services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: simple_bank
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # Added healthcheck
      test: ["CMD-SHELL", "pg_isready -U root -d simple_bank"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    ports:
      - "8080:8080"
    environment:
      DB_SOURCE: "postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable"
    volumes:
      - ./app.env:/app/app.env
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/main"]



volumes:
  postgres_data:
  go_mod:


# services:
#   postgres:
#     image: postgres:13-alpine
#     environment:
#       POSTGRES_USER: root
#       POSTGRES_PASSWORD: secret
#       POSTGRES_DB: simple_bank
#     ports:
#       - "5433:5432"  # Changed to avoid conflicts
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   api:
#     build: .
#     ports:
#       - "8080:8080"
#     environment:
#       DB_SOURCE: "postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable"  # Use container port
#     volumes:
#       - .:/app
#       - go_mod:/go/pkg/mod
#     depends_on:
#       postgres:
#         condition: service_healthy

# volumes:
#   postgres_data:
#   go_mod:


# services:
#   postgres:
#     image: postgres:13-alpine
#     environment:
#       POSTGRES_USER: root
#       POSTGRES_PASSWORD: secret
#       POSTGRES_DB: simple_bank
#   api:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8080:8080"
#     environment:
#       DB_SOURCE: "postgresql://root:secret@postgres:5433/simple_bank?sslmode=disable"

# services:
#   postgres:
#     image: postgres:13-alpine
#     environment:
#       POSTGRES_USER: root
#       POSTGRES_PASSWORD: secret
#       POSTGRES_DB: simple_bank
#     ports:
#       - "5433:5432"
#     volumes:
#       - data-volume:/var/lib/postgresql/data

#   redis:
#     image: redis:7-alpine

#   api:
#     build: .
#     ports:
#       - "8080:8080"
#       - "9090:9090"
#     environment:
#       DB_SOURCE: "postgresql://root:secret@postgres:5433/simple_bank?sslmode=disable"
#       REDIS_ADDRESS: "redis:6379"
#     depends_on:
#       postgres:
#         condition: service_healthy
#       redis:
#         condition: service_started
#     entrypoint: ["/app/wait-for.sh", "postgres:5433", "--", "/app/start.sh"]
#     command: ["/app/main"]

# volumes:
#   data-volume:

# services:
#   postgres:
#     image: postgres:13-alpine
#     environment:
#       POSTGRES_USER: root
#       POSTGRES_PASSWORD: secret
#       POSTGRES_DB: simple_bank
#     ports:
#       - "5432"  # Changed host port to 5434
#     volumes:
#       - data-volume:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U root"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

#   redis:
#     image: redis:7-alpine
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

#   api:
#     build: .
#     ports:
#       - "8080:8080"
#       - "9090:9090"
#     environment:
#       DB_SOURCE: "postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable"
#       REDIS_ADDRESS: "redis:6379"
#     depends_on:
#       postgres:
#         condition: service_healthy
#       redis:
#         condition: service_healthy

# volumes:
#   data-volume:
