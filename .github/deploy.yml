# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        # role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
        # role-duration-seconds: 1200
        # role-session-name: MySessionName

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: simplebank
        IMAGE_TAG: ${{ github.sha }}
      run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  # run: |
  #   aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  #   aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  #   aws configure set region $AWS_REGION

  #   - name: Login to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v2

  #   - name: Build, tag, and push docker image to Amazon ECR
  #     env:
  #       REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #       REPOSITORY: my-ecr-repo
  #       IMAGE_TAG: ${{ github.sha }}
  #     run: |
  #         docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
  #         docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  #   - uses: actions/checkout@v4

  #   - name: Install golang-migrate
  #     run: |
  #       curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.3/migrate.linux-amd64.tar.gz | tar xvz
  #       sudo mv migrate /usr/bin/migrate
  #       which migrate

  #   - name: Run migrations
  #     run: make migrateup


  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.24.4'
  #       # Optional: Enable dependency caching /checksums
  #       cache: true
  #       cache-dependency-path: go.sum
    
  #   - name: Get dependencies
  #     run: |
  #       go mod download
  #       go mod verify
        
  #   - name: Build
  #     run: go build -v ./...
    
  #   - name: Test
  #     run: make test
    
  #   # ensuring go.mod stays clean 
  #   - name: Tidy
  #     run: go mod tidy